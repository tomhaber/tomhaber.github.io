<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>High-Performance Computing | Tom Haber</title><link>https://tomhaber.github.io/tag/high-performance-computing/</link><atom:link href="https://tomhaber.github.io/tag/high-performance-computing/index.xml" rel="self" type="application/rss+xml"/><description>High-Performance Computing</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 23 Oct 2020 00:00:00 +0000</lastBuildDate><image><url>https://tomhaber.github.io/media/icon_hu6d9b43a3bb6ad0c3e22efc500208d687_3520_512x512_fill_lanczos_center_3.png</url><title>High-Performance Computing</title><link>https://tomhaber.github.io/tag/high-performance-computing/</link></image><item><title>Severo.jl</title><link>https://tomhaber.github.io/project/severo/</link><pubDate>Fri, 23 Oct 2020 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/project/severo/</guid><description>&lt;p>Severo.jl was created for the scalable analysis of single-cell RNA-seq datasets: the implementation is designed to minimize hardware resources such as memory while maximizing performance through parallelism and hardware optimizations.&lt;/p>
&lt;p>Severo.jl gives an order of magnitude speedup when compared to other existing packages such as Seurat and Scanpy.&lt;/p>
&lt;p>The package provides a toolbox of different algorithms and statistical methods from which the user can pick and choose.&lt;/p></description></item><item><title>From Conditional Independence to Parallel Execution in Hierarchical Models</title><link>https://tomhaber.github.io/publication/conditional/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/publication/conditional/</guid><description/></item><item><title>Automatic Parallelization of Probabilistic Models with Varying Load Imbalance</title><link>https://tomhaber.github.io/publication/autopar/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/publication/autopar/</guid><description/></item><item><title>Improving the runtime performance of non-linear mixed-effects model estimation</title><link>https://tomhaber.github.io/publication/improving/</link><pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/publication/improving/</guid><description/></item><item><title>Improving ODE Integration on Graphics Processing Units by Reducing Thread Divergence</title><link>https://tomhaber.github.io/publication/divergence/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/publication/divergence/</guid><description/></item><item><title>High-performance Computing</title><link>https://tomhaber.github.io/project/hpc/</link><pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/project/hpc/</guid><description>&lt;p>I&amp;rsquo;m interested in the implementation and design of high-performant, parallel software and algorithms. As well as, frameworks and domain-specific languages that enable expressing such software.&lt;/p></description></item><item><title>Relaxing Scalability Limits with Speculative Parallelism in Sequential Monte Carlo</title><link>https://tomhaber.github.io/publication/specmcmc/</link><pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/publication/specmcmc/</guid><description/></item><item><title>DiffMEM</title><link>https://tomhaber.github.io/project/diffmem/</link><pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate><guid>https://tomhaber.github.io/project/diffmem/</guid><description>&lt;p>Existing tools (NONMEM, SAS, Winbugs) are not well suited for complex models and high-performance. The algorithms used are not always very suitable for use with large numbers of parameters and complicated non-linear models. And more importantly the hardware landscape has changed tremendously since those tools were developed: single core chip performance has begun to stagnate with a resulting move to multicore and more parallelism.&lt;/p>
&lt;p>DiffMEM is tool for Non-Linear Mixed Effect model optimization in a frequentist and Bayesian context built specifically for complex models (mostly ordinary/partial differential equations) and performance. Through heavy the use of parallism, extensive low-level optimizations and algorithmic innovation, it is able to rapidly fit complex models. This in turn allows for shorter duty-cycles while building a model, and enables adaptive/optimal trial design and model validation since those typically require a lot of simulation+estimation steps.&lt;/p></description></item></channel></rss>